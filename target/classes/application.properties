spring.application.name=linkedin_clone_application

spring.datasource.url=jdbc:postgresql://localhost:5432/LinkedIn-clone-application
#spring.datasource.username=ishangupta
#spring.datasource.password=""

spring.jpa.hibernate.ddl-auto=update
spring.main.allow-circular-references=true

cloudinary.cloud_name=dh6ajx6ue
cloudinary.api_key=176721159429973
cloudinary.api_secret=wOq-7rCXnN1d8WvYv_GIJPB2Y_M

# Sendinblue API key
sendinblue.api.key=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

# Sender's email and name for the notifications
sendinblue.sender.email=sonuanand644@gmail.com
sendinblue.sender.name=LinkedIn Clone


# Gmail SMTP server
spring.mail.host=smtp.gmail.com

# Gmail SMTP port for TLS
spring.mail.port=587

# Your Gmail address that will send the email
spring.mail.username=vishalthukral5@gmail.com

# Your Gmail App Password (not your actual Gmail login password)
spring.mail.password=mbfhyqgdxmkahwsa

# Use SMTP protocol
spring.mail.protocol=smtp

# Enable authentication
spring.mail.properties.mail.smtp.auth=true

# Enable STARTTLS encryption
spring.mail.properties.mail.smtp.starttls.enable=true